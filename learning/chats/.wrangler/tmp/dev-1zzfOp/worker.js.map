{
  "version": 3,
  "sources": ["../bundle-iYgB7i/checked-fetch.js", "../../../src/chatroom_do.js", "../../../src/worker.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-iYgB7i/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-iYgB7i/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/ygs/ygs/yuangs/learning/chatroom/.wrangler/tmp/dev-1zzfOp",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "// src/chatroom_do.js\n\n// \u5B9A\u4E49\u5E94\u7528\u5C42\u534F\u8BAE\u7684\u6D88\u606F\u7C7B\u578B\nconst MSG_TYPE_CHAT = 'chat';\nconst MSG_TYPE_DELETE = 'delete';\nconst MSG_TYPE_SYSTEM_STATE = 'system_state';\nconst MSG_TYPE_HISTORY = 'history';\n\nexport class ChatRoomDurableObject {\n    constructor(state, env) {\n        this.state = state;\n        // `users` \u7528\u4E8E\u5B58\u50A8\u6240\u6709\u8FDE\u63A5\u5230\u6B64\u804A\u5929\u5BA4\u7684 WebSocket \u4F1A\u8BDD\n        // Map \u7684\u952E\u662F WebSocket \u5BF9\u8C61\uFF0C\u503C\u662F\u5305\u542B\u7528\u6237\u4FE1\u606F\u7684\u5BF9\u8C61\n        this.users = new Map();\n        // `messages` \u7528\u4E8E\u5B58\u50A8\u804A\u5929\u8BB0\u5F55\n        this.messages = [];\n        // `lastSave` \u7528\u4E8E\u5B9E\u73B0\u5BF9\u5B58\u50A8\u7684\u8282\u6D41\u5199\u5165\n        this.lastSave = 0;\n\n        // \u5F02\u6B65\u521D\u59CB\u5316\u5DE5\u4F5C\uFF0C\u52A0\u8F7D\u5386\u53F2\u804A\u5929\u8BB0\u5F55\n        this.initializePromise = this.loadHistory();\n    }\n\n    // \u4ECE\u6301\u4E45\u5316\u5B58\u50A8\u4E2D\u52A0\u8F7D\u5386\u53F2\u6D88\u606F\n    async loadHistory() {\n        // \u4F7F\u7528\u4E8B\u52A1\u786E\u4FDD\u539F\u5B50\u6027\n        await this.state.storage.transaction(async (txn) => {\n            const storedMessages = await txn.get(\"messages\");\n            if (storedMessages) {\n                this.messages = storedMessages;\n            }\n        });\n    }\n\n    // \u5B89\u6392\u4E00\u6B21\u8282\u6D41\u7684\u4FDD\u5B58\u64CD\u4F5C\n    scheduleSave() {\n        const now = Date.now();\n        // \u907F\u514D\u8FC7\u4E8E\u9891\u7E41\u7684\u5199\u5165\uFF08\u4F8B\u5982\uFF0C\u6BCF5\u79D2\u6700\u591A\u4FDD\u5B58\u4E00\u6B21\uFF09\n        if (now - this.lastSave > 5000) {\n            this.lastSave = now;\n            // \u5728\u540E\u53F0\u6267\u884C\u4FDD\u5B58\uFF0C\u4E0D\u963B\u585E\u5F53\u524D\u8BF7\u6C42\n            this.state.waitUntil(this.saveHistory());\n        }\n    }\n\n    // \u5C06\u804A\u5929\u8BB0\u5F55\u5B8C\u6574\u5730\u4FDD\u5B58\u5230\u6301\u4E45\u5316\u5B58\u50A8\u4E2D\n    async saveHistory() {\n        try {\n            await this.state.storage.transaction(async (txn) => {\n                // \u76F4\u63A5\u5C06\u6D88\u606F\u6570\u7EC4\u5E8F\u5217\u5316\u4E3A JSON \u5B57\u7B26\u4E32\u8FDB\u884C\u5B58\u50A8\n                await txn.put(\"messages\", this.messages);\n                console.log('Chat history saved to storage.');\n            });\n        } catch (error) {\n            console.error('Failed to save chat history:', error);\n        }\n    }\n\n    // Durable Object \u7684\u4E3B\u5165\u53E3\u70B9\n    async fetch(request) {\n        // \u786E\u4FDD\u521D\u59CB\u5316\u5B8C\u6210\n        await this.initializePromise;\n\n        // \u4F7F\u7528 blockConcurrencyWhile \u4FDD\u8BC1\u6240\u6709\u64CD\u4F5C\u4E32\u884C\u6267\u884C\uFF0C\u907F\u514D\u7ADE\u6001\u6761\u4EF6\n        return this.state.blockConcurrencyWhile(async () => {\n            const upgradeHeader = request.headers.get(\"Upgrade\");\n            if (upgradeHeader !== \"websocket\") {\n                return new Response(\"Expected Upgrade: websocket\", { status: 426 });\n            }\n\n            // \u4ECE URL \u4E2D\u83B7\u53D6\u7528\u6237\u540D\n            const url = new URL(request.url);\n            const username = url.searchParams.get(\"username\") || \"Anonymous\";\n\n            // \u521B\u5EFA WebSocket \u5BF9\n            const { 0: client, 1: server } = new WebSocketPair();\n            \n            // \u5904\u7406\u65B0\u7684 WebSocket \u4F1A\u8BDD\n            await this.handleSession(server, username);\n            \n            // \u8FD4\u56DE\u5BA2\u6237\u7AEF WebSocket\uFF0C\u5B8C\u6210\u5347\u7EA7\u63E1\u624B\n            return new Response(null, {\n                status: 101,\n                webSocket: client\n            });\n        });\n    }\n\n    // \u5904\u7406\u4E00\u4E2A\u65B0\u7684 WebSocket \u8FDE\u63A5\u4F1A\u8BDD\n    async handleSession(ws, username) {\n        ws.accept();\n\n        // \u5B58\u50A8\u4F1A\u8BDD\u4FE1\u606F\n        const user = { ws, username };\n        this.users.set(ws, user);\n\n        // 1. \u5411\u65B0\u7528\u6237\u53D1\u9001\u5B8C\u6574\u7684\u804A\u5929\u8BB0\u5F55\n        this.sendMessage(ws, {\n            type: MSG_TYPE_HISTORY,\n            payload: this.messages\n        });\n\n        // 2. \u5E7F\u64AD\u6700\u65B0\u7684\u7CFB\u7EDF\u72B6\u6001\uFF08\u7528\u6237\u5217\u8868\uFF09\u7ED9\u6240\u6709\u4EBA\n        this.broadcastSystemState();\n        \n        // \u76D1\u542C\u6765\u81EA\u5BA2\u6237\u7AEF\u7684\u6D88\u606F\n        ws.addEventListener(\"message\", (event) => {\n            try {\n                const data = JSON.parse(event.data);\n                if (data.type === MSG_TYPE_CHAT) {\n                    this.handleChatMessage(user, data.payload);\n                } else if (data.type === MSG_TYPE_DELETE) {\n                    this.handleDeleteMessage(data.payload);\n                }\n            } catch (err) {\n                console.error('Failed to handle message:', err);\n            }\n        });\n\n        // \u76D1\u542C\u8FDE\u63A5\u5173\u95ED\u4E8B\u4EF6\n        ws.addEventListener(\"close\", () => this.handleClose(ws));\n        ws.addEventListener(\"error\", () => this.handleClose(ws));\n    }\n\n    // \u5904\u7406\u4ECE\u5BA2\u6237\u7AEF\u6536\u5230\u7684\u804A\u5929\u6D88\u606F\n    handleChatMessage(user, payload) {\n        const message = {\n            id: crypto.randomUUID(),\n            username: user.username,\n            text: payload.text,\n            timestamp: Date.now(),\n        };\n\n        this.messages.push(message);\n        // \u9650\u5236\u5185\u5B58\u4E2D\u6D88\u606F\u7684\u6570\u91CF\uFF0C\u9632\u6B62\u65E0\u9650\u589E\u957F\n        if (this.messages.length > 100) {\n            this.messages.shift();\n        }\n\n        // \u5E7F\u64AD\u65B0\u6D88\u606F\u7ED9\u6240\u6709\u7528\u6237\n        this.broadcast({\n            type: MSG_TYPE_CHAT,\n            payload: message\n        });\n\n        // \u5B89\u6392\u4FDD\u5B58\n        this.scheduleSave();\n    }\n\n    // \u5904\u7406\u4ECE\u5BA2\u6237\u7AEF\u6536\u5230\u7684\u5220\u9664\u6D88\u606F\n    handleDeleteMessage(payload) {\n        this.messages = this.messages.filter(m => m.id !== payload.id);\n\n        // \u5E7F\u64AD\u5220\u9664\u6D88\u606F\u7ED9\u6240\u6709\u7528\u6237\n        this.broadcast({\n            type: MSG_TYPE_DELETE,\n            payload: payload\n        });\n\n        // \u5B89\u6392\u4FDD\u5B58\n        this.scheduleSave();\n    }\n\n    // \u5904\u7406 WebSocket \u8FDE\u63A5\u5173\u95ED\n    handleClose(ws) {\n        if (this.users.has(ws)) {\n            this.users.delete(ws);\n            // \u5E7F\u64AD\u7528\u6237\u5217\u8868\u53D8\u66F4\n            this.broadcastSystemState();\n        }\n    }\n\n    // --- \u6D88\u606F\u53D1\u9001\u8F85\u52A9\u65B9\u6CD5 ---\n\n    // \u53D1\u9001\u5355\u4E2A\u6D88\u606F\u7684\u5E95\u5C42\u65B9\u6CD5\n    sendMessage(ws, message) {\n        try {\n            ws.send(JSON.stringify(message));\n        } catch (err) {\n            console.error('Failed to send message:', err);\n            this.handleClose(ws);\n        }\n    }\n\n    // \u5E7F\u64AD\u6D88\u606F\u7ED9\u6240\u6709\u8FDE\u63A5\u7684\u5BA2\u6237\u7AEF\n    broadcast(message) {\n        this.users.forEach(user => {\n            this.sendMessage(user.ws, message);\n        });\n    }\n\n    // \u5E7F\u64AD\u6700\u65B0\u7684\u7CFB\u7EDF\u72B6\u6001\uFF08\u5982\u7528\u6237\u5217\u8868\uFF09\n    broadcastSystemState() {\n        const userList = Array.from(this.users.values()).map(u => u.username);\n        this.broadcast({\n            type: MSG_TYPE_SYSTEM_STATE,\n            payload: {\n                users: userList,\n            }\n        });\n    }\n}", "// src/worker.js\n\nimport { ChatRoomDurableObject } from './chatroom_do.js';\nimport html from '../public/index.html';\n\n// \u5BFC\u51FA Durable Object \u7C7B\uFF0C\u4EE5\u4FBF Cloudflare \u5E73\u53F0\u53EF\u4EE5\u5B9E\u4F8B\u5316\u5B83\nexport { ChatRoomDurableObject };\n\nexport default {\n    async fetch(request, env, ctx) {\n        const url = new URL(request.url);\n        const pathParts = url.pathname.split('/').filter(part => part);\n\n        // \u5904\u7406\u56FE\u7247\u4E0A\u4F20\n        if (url.pathname === '/upload' && request.method === 'POST') {\n            try {\n                const filename = request.headers.get('X-Filename') || `upload-${Date.now()}`;\n                const object = await env.R2_BUCKET.put(filename, request.body, {\n                    httpMetadata: request.headers,\n                });\n                // \u6784\u9020\u53EF\u516C\u5F00\u8BBF\u95EE\u7684 URL\n                const publicUrl = `${new URL(request.url).origin}/${object.key}`;\n                return new Response(JSON.stringify({ url: publicUrl }), {\n                    headers: { 'Content-Type': 'application/json' },\n                });\n            } catch (error) {\n                console.error('Upload error:', error);\n                return new Response('Error uploading file.', { status: 500 });\n            }\n        }\n\n        // \u5982\u679C\u8DEF\u5F84\u4E3A\u7A7A\uFF0C\u5F15\u5BFC\u7528\u6237\u8BBF\u95EE\u4E00\u4E2A\u623F\u95F4\n        if (pathParts.length === 0) {\n            return new Response('Welcome! Please access /<room-name> to join a chat room.', { status: 404 });\n        }\n\n        // \u4F7F\u7528\u7B2C\u4E00\u4E2A\u8DEF\u5F84\u6BB5\u4F5C\u4E3A\u804A\u5929\u5BA4\u7684\u552F\u4E00ID\n        const roomName = pathParts[0];\n\n        // \u68C0\u67E5\u8BF7\u6C42\u662F\u5426\u662F WebSocket \u5347\u7EA7\u8BF7\u6C42\n        const upgradeHeader = request.headers.get(\"Upgrade\");\n        if (upgradeHeader === \"websocket\") {\n            // \u5982\u679C\u662F WebSocket \u8BF7\u6C42\uFF0C\u5C06\u5176\u8DEF\u7531\u5230\u5BF9\u5E94\u7684 Durable Object \u5B9E\u4F8B\n            console.log(`Routing WebSocket for room [${roomName}] to Durable Object...`);\n            const doId = env.CHAT_ROOM_DO.idFromName(roomName);\n            const stub = env.CHAT_ROOM_DO.get(doId);\n            // \u5C06\u8BF7\u6C42\u548C\u54CD\u5E94\u7684\u63A7\u5236\u6743\u5B8C\u5168\u4EA4\u7ED9 Durable Object\n            return stub.fetch(request);\n        }\n\n        // \u5BF9\u4E8E\u6240\u6709\u975E WebSocket \u7684 GET \u8BF7\u6C42\uFF0C\u8FD4\u56DE\u6211\u4EEC\u7684\u5355\u9875\u5E94\u7528 HTML\n        return new Response(html, {\n            headers: { 'Content-Type': 'text/html;charset=UTF-8' },\n        });\n    },\n};", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/ygs/ygs/yuangs/learning/chatroom/src/worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/ygs/ygs/yuangs/learning/chatroom/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/ygs/ygs/yuangs/learning/chatroom/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/ygs/ygs/yuangs/learning/chatroom/src/worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/ygs/ygs/yuangs/learning/chatroom/.wrangler/tmp/bundle-iYgB7i/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/ygs/ygs/yuangs/learning/chatroom/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/ygs/ygs/yuangs/learning/chatroom/.wrangler/tmp/bundle-iYgB7i/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/ygs/ygs/yuangs/learning/chatroom/.wrangler/tmp/bundle-iYgB7i/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
